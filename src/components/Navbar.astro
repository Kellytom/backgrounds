---
// Enhanced navbar with Starlight search and theme toggle for ALL page types
// Starlight components CAN be used in custom Astro pages!
import Search from '@astrojs/starlight/components/Search.astro';
---

<nav class="custom-navbar">
  <div class="navbar-container">
    <div class="navbar-brand">
      <a href="/">Hacker1</a>
    </div>
    <div class="navbar-center">
      <div class="navbar-menu">
        <a href="/">Home</a>
        <a href="/bulma">Bulma Demo</a>
        <a href="/backgrounds">Backgrounds</a>
        <a href="/markdown-demo">Markdown Demo</a>
      </div>
    </div>
    <div class="navbar-actions">
      <div class="search-container">
        <Search />
      </div>
      <div class="theme-container">
        <span class="theme-icon">ðŸŒ™</span>
        <div class="theme-dropdown">
          <select id="theme-select" class="theme-select">
            <option value="auto">Auto</option>
            <option value="light">Light</option>
            <option value="dark">Dark</option>
          </select>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  // Theme switching functionality
  const themeSelect = document.getElementById('theme-select');
  
  // Get current theme from localStorage or default to 'auto'
  const getCurrentTheme = () => {
    return localStorage.getItem('starlight-theme') || 'auto';
  };
  
  // Set theme in localStorage and apply to document
  const setTheme = (theme: string) => {
    localStorage.setItem('starlight-theme', theme);
    
    if (theme === 'auto') {
      document.documentElement.removeAttribute('data-theme');
    } else {
      document.documentElement.setAttribute('data-theme', theme);
    }
  };
  
  // Initialize theme on page load
  const initTheme = () => {
    const currentTheme = getCurrentTheme();
    if (themeSelect) {
      (themeSelect as HTMLSelectElement).value = currentTheme;
    }
    setTheme(currentTheme);
  };
  
  // Handle theme change
  if (themeSelect) {
    themeSelect.addEventListener('change', (e) => {
      const target = e.target as HTMLSelectElement;
      if (target) {
        setTheme(target.value);
      }
    });
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTheme);
  } else {
    initTheme();
  }
</script>

<style>
.custom-navbar {
  background: #1a1a1a;
  padding: 1rem 0;
  border-bottom: 1px solid #333;
  position: relative;
  z-index: 1000;
}

.navbar-container {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1rem;
  gap: 2rem;
}

.navbar-brand a {
  color: #fff;
  text-decoration: none;
  font-size: 1.5rem;
  font-weight: bold;
}

.navbar-center {
  flex: 1;
  display: flex;
  justify-content: center;
}

.navbar-menu {
  display: flex;
  gap: 2rem;
}

.navbar-menu a {
  color: #ccc;
  text-decoration: none;
  transition: color 0.3s;
}

.navbar-menu a:hover {
  color: #fff;
}

.navbar-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
  position: relative;
  z-index: 1001;
}

.search-container {
  min-width: 200px;
  position: relative;
  z-index: 1001;
}

.theme-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  position: relative;
  z-index: 1001;
  pointer-events: auto;
}

.theme-icon {
  font-size: 1.2rem;
  opacity: 0.8;
  transition: opacity 0.3s;
}

.theme-container:hover .theme-icon {
  opacity: 1;
}

/* Override Starlight search styles to fit our navbar */
.search-container :global(.search) {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid #666;
  border-radius: 6px;
  position: relative;
  z-index: 1001;
}

.search-container :global(.search input) {
  background: transparent;
  color: #fff;
  border: none;
}

.search-container :global(.search input::placeholder) {
  color: #bbb;
}

/* Make search box even lighter on hover/focus */
.search-container :global(.search:hover) {
  background: rgba(255, 255, 255, 0.25);
  border-color: #777;
}

.search-container :global(.search:focus-within) {
  background: rgba(255, 255, 255, 0.25);
  border-color: #888;
}

/* Ensure search dropdown appears properly */
.search-container :global(.search-results),
.search-container :global([data-search-results]) {
  z-index: 1002 !important;
  position: absolute;
}

/* Simple theme dropdown styling */
.theme-dropdown {
  position: relative;
}

.theme-select {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid #444;
  color: #fff;
  border-radius: 4px;
  padding: 0.25rem 0.5rem;
  cursor: pointer;
  min-width: 80px;
  font-size: 0.9rem;
}

.theme-select:hover {
  background: rgba(255, 255, 255, 0.15);
}

.theme-select:focus {
  outline: 2px solid rgba(255, 255, 255, 0.3);
  outline-offset: 2px;
  background: rgba(255, 255, 255, 0.15);
}

.theme-select option {
  background: #2a2a2a;
  color: #fff;
  padding: 0.5rem;
}

/* Responsive design */
@media (max-width: 768px) {
  .navbar-container {
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }
  
  .navbar-center {
    order: 3;
    flex: none;
  }
  
  .navbar-actions {
    order: 2;
    justify-content: space-between;
    width: 100%;
  }
  
  .search-container {
    flex: 1;
    min-width: 150px;
  }
}
</style>
